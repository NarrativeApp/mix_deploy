#!/usr/bin/env bash

# Set up target system

set -e

export LANG=<%= env_lang %>

MIX_ENV="${MIX_ENV:-dev}"

function do_create_dirs(){
<%= for {path, user, group, mode, comment} <- create_dirs do %>
  <%= if path do %>
  # <%= comment %>
  echo "==> Creating dir $DESTDIR<%= path %>"
  mkdir -p "$DESTDIR<%= path %>"
  chown <%= user %>:<%= group %> "$DESTDIR<%= path %>"
  chmod <%= Integer.to_string(mode, 8) %> "$DESTDIR<%= path %>"
  <% end %>
<% end %>
}

function do_enable_systemd_units(){
  echo "==> Enabling systemd unit <%= service_name %>"
  systemctl enable <%= service_name %>.service
  <%= if restart_method == :systemd_flag do %>
  echo "==> Enabling systemd unit <%= service_name %>-restart"
  systemctl enable <%= service_name %>-restart.service
  <% end %>
}

function do_copy_files(){
  echo "==> Copying systemd unit files <%= service_name %>"
  mkdir -p "$DESTDIR/lib/systemd/system"
  cp _build/$MIX_ENV/systemd/lib/systemd/system/* "$DESTDIR/lib/systemd/system/"
  chmod 0644 $DESTDIR/lib/systemd/system/<%= service_name %>*

  <%= if sudo_deploy or sudo_app do %>
  echo "==> Copying sudoers.d/<%= ext_name %>"
  mkdir -p "$DESTDIR/etc/sudoers.d"
  cp "_build/$MIX_ENV/deploy/etc/sudoers.d/<%= ext_name %>" "$DESTDIR/etc/sudoers.d/"
  chmod 0600 "$DESTDIR/etc/sudoers.d/<%= ext_name %>"
  <% end %>
}

# Deploy release from local build
function do_deploy_release(){
  TIMESTAMP=$(date +%Y%m%d%H%M%S)
  RELEASE_DIR="$DESTDIR<%= releases_dir %>/$TIMESTAMP"
  DEFAULT_VERSION="<%= version %>""
  VERSION="${VERSION:-$DEFAULT_VERSION}

  echo "==> Deploying release $VERSION to $RELEASE_DIR"
  mkdir -p "$RELEASE_DIR"

  TAR_FILE="_build/$MIX_ENV/rel/<%= app_name %>/releases/$VERSION/<%= app_name %>.tar.gz"
  echo "===> Extracting release from tar file $TAR_FILE"
  tar -C "$RELEASE_DIR" -xf "$TAR_FILE"

  CURRENT_LINK="$DESTDIR<%= releases_dir %>/current"

  echo "===> Setting current symlink"
  if [[ -L "$CURRENT_LINK" ]]; then
    rm "$CURRENT_LINK"
  fi
  ln -s "$RELEASE_DIR" "$CURRENT_LINK"
}

function do_rollback_release(){
  RELEASES_DIR="$DESTDIR<%= releases_dir %>"
  CURRENT_LINK="$RELEASES_DIR/current"
  PREV_DIR=$(find "$RELEASES_DIR" -maxdepth 1 | sort | tail -2 | head -1)
  PREV_NAME=$(basename "$PREV_DIR")
  RELEASE="${RELEASE:-$PREV_NAME}"

  echo "==> Rolling back to release $RELEASE"
  if [[ -L "$CURRENT_LINK" ]]; then
    rm "$CURRENT_LINK"
  fi
  ln -s "$RELEASES_DIR/$PREV_NAME" "$CURRENT_LINK"
}

function do_restart(){
  /bin/systemctl restart <%= service_name %>
}


if [ -z "$1" ]; then
    echo "deploy: no task specified"
    exit 1
fi

case $1 in
    create_dirs)
        do_create_dirs
        ;;
    copy_files)
        do_copy_files
        ;;
    enable_systemd_units)
        do_enable_systemd_units
        ;;
    deploy_release)
        do_deploy_release
        ;;
    rollback_release)
        do_rollback_release
        ;;
    restart)
        do_restart
        ;;
    *)
        echo "Invalid command $1"
        exit 1
        ;;
esac

exit 0
